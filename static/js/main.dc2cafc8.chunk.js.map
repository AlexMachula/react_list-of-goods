{"version":3,"sources":["Goodlist.js","App.js","index.js"],"names":["GoodList","state","goods","props","length","goodsReverse","setState","prevState","reverse","goodsSortAlphabet","sort","goodsReset","goodsSortByLength","a","b","goodsSelectChange","event","value","target","filter","good","this","className","map","key","type","onClick","onInput","Array","fill","item","index","React","Component","goodsFromServer","App","isVisible","hideStartButton","ReactDOM","render","document","getElementById"],"mappings":"oOA2GeA,E,4MAvGbC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,OAAQ,G,EAGVC,aAAe,WACb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOM,e,EAIhCC,kBAAoB,WAClB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOQ,Y,EAIhCC,WAAa,WACX,EAAKL,SACH,CAAEJ,MAAM,YAAK,EAAKC,MAAMD,U,EAI5BU,kBAAoB,WAClB,EAAKN,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAClBQ,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAET,OAASU,EAAEV,e,EAInCW,kBAAoB,SAACC,GAAW,IACtBC,EAAUD,EAAME,OAAhBD,MAER,EAAKX,UAAS,SAAAC,GAAS,MAAK,CAC1BH,OAAQa,EACRf,MAAOK,EAAUL,MACdiB,QAAO,SAAAC,GAAI,OAAKA,EAAKhB,QAAUa,U,uDAI5B,IACAf,EAAUmB,KAAKpB,MAAfC,MAER,OACE,yBAAKoB,UAAU,SACb,4BACGpB,EAAMqB,KAAI,SAAAH,GAAI,OACb,wBAAII,IAAKJ,GACNA,OAKP,4BACEK,KAAK,SACLC,QAASL,KAAKhB,cAFhB,WAOA,4BACEoB,KAAK,SACLC,QAASL,KAAKZ,mBAFhB,uBAOA,4BACEgB,KAAK,SACLC,QAASL,KAAKV,YAFhB,SAOA,4BACEc,KAAK,SACLC,QAASL,KAAKT,mBAFhB,kBAOA,4BACEe,QAASN,KAAKN,kBACdE,MAAOI,KAAKpB,MAAMG,QAEjBwB,MAAM,IAAIC,KAAK,IAAIN,KAAI,SAACO,EAAMC,GAAP,OACtB,4BACEd,MAAOc,EAAQ,GAEd,IACAA,EAAQ,Y,GA3FAC,IAAMC,WCCvBC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAgCaC,E,4MA5BblC,MAAQ,CACNmC,WAAW,G,EAGbC,gBAAkB,WAChB,EAAK/B,SACH,CAAE8B,WAAW,K,uDAIP,IACAA,EAAcf,KAAKpB,MAAnBmC,UAER,OACE,yBAAKd,UAAU,OACb,qCACEc,EAEE,4BAAQX,KAAK,SAASC,QAASL,KAAKgB,iBAApC,iBAIA,kBAAC,EAAD,CAAUnC,MAAOgC,S,GAvBXF,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dc2cafc8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodList extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n    length: 1,\n  };\n\n  goodsReverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  goodsSortAlphabet = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort(),\n    }));\n  }\n\n  goodsReset = () => {\n    this.setState(\n      { goods: [...this.props.goods] },\n    );\n  }\n\n  goodsSortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods]\n        .sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  goodsSelectChange = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      length: value,\n      goods: prevState.goods\n        .filter(good => (good.length <= value)),\n    }));\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"goods\">\n        <ul>\n          {goods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={this.goodsReverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.goodsSortAlphabet}\n        >\n          Sort Alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.goodsReset}\n        >\n          Reset\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.goodsSortByLength}\n        >\n          Sort by Length\n        </button>\n\n        <select\n          onInput={this.goodsSelectChange}\n          value={this.state.length}\n        >\n          {Array(10).fill('').map((item, index) => (\n            <option\n              value={index + 1}\n            >\n              {' '}\n              {index + 1}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default GoodList;\n","import React from 'react';\nimport GoodList from './Goodlist';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisible: true,\n  };\n\n  hideStartButton = () => {\n    this.setState(\n      { isVisible: false },\n    );\n  }\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {(isVisible)\n          ? (\n            <button type=\"button\" onClick={this.hideStartButton}>\n              Push to start\n            </button>\n          )\n          : <GoodList goods={goodsFromServer} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}