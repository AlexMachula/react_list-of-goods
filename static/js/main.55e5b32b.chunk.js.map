{"version":3,"sources":["Goodlist.js","App.js","index.js"],"names":["GoodList","state","goods","props","length","reverseGoods","setState","prevState","reverse","sortAlphabetGoods","sort","a","b","localeCompare","resetGoods","sortByLengthGoods","selectedChangeOfGoods","event","value","target","filter","good","this","arrayOfSelect","Array","fill","className","map","key","type","onClick","onInput","item","index","React","Component","goodsFromServer","App","isVisible","hideStartButton","ReactDOM","render","document","getElementById"],"mappings":"oOA4GeA,E,4MAxGbC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,OAAQ,G,EAGVC,aAAe,WACb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOM,e,EAIhCC,kBAAoB,WAClB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAAOQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI/DE,WAAa,WACX,EAAKR,SACH,CAAEJ,MAAM,YAAK,EAAKC,MAAMD,U,EAI5Ba,kBAAoB,WAClB,EAAKT,UAAS,SAAAC,GAAS,MAAK,CAC1BL,MAAO,YAAIK,EAAUL,OAClBQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEP,OAASQ,EAAER,e,EAInCY,sBAAwB,SAACC,GAAW,IAC1BC,EAAUD,EAAME,OAAhBD,MAER,EAAKZ,SAAS,CACZF,OAAQc,EACRhB,MAAO,EAAKC,MAAMD,MACfkB,QAAO,SAAAC,GAAI,OAAKA,EAAKjB,QAAUc,Q,uDAI5B,IACAhB,EAAUoB,KAAKrB,MAAfC,MACFqB,EAAgBC,MAAM,IAAIC,KAAK,IAErC,OACE,yBAAKC,UAAU,SACb,4BACGxB,EAAMyB,KAAI,SAAAN,GAAI,OACb,wBAAIO,IAAKP,GACNA,OAKP,4BACEQ,KAAK,SACLC,QAASR,KAAKjB,cAFhB,WAOA,4BACEwB,KAAK,SACLC,QAASR,KAAKb,mBAFhB,uBAOA,4BACEoB,KAAK,SACLC,QAASR,KAAKR,YAFhB,SAOA,4BACEe,KAAK,SACLC,QAASR,KAAKP,mBAFhB,kBAOA,4BACEgB,QAAST,KAAKN,sBACdE,MAAOI,KAAKrB,MAAMG,QAEjBmB,EAAcI,KAAI,SAACK,EAAMC,GAAP,OACjB,4BACEf,MAAOe,EAAQ,GAEd,IACAA,EAAQ,Y,GA5FAC,IAAMC,WCCvBC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAgCaC,E,4MA5BbpC,MAAQ,CACNqC,WAAW,G,EAGbC,gBAAkB,WAChB,EAAKjC,SACH,CAAEgC,WAAW,K,uDAIP,IACAA,EAAchB,KAAKrB,MAAnBqC,UAER,OACE,yBAAKZ,UAAU,OACb,qCAEEY,EAEI,4BAAQT,KAAK,SAASC,QAASR,KAAKiB,iBAApC,iBAGE,kBAAC,EAAD,CAAUrC,MAAOkC,S,GAvBfF,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.55e5b32b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodList extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n    length: 1,\n  };\n\n  reverseGoods = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlphabetGoods = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  resetGoods = () => {\n    this.setState(\n      { goods: [...this.props.goods] },\n    );\n  }\n\n  sortByLengthGoods = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods]\n        .sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  selectedChangeOfGoods = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      length: value,\n      goods: this.props.goods\n        .filter(good => (good.length <= value)),\n    });\n  }\n\n  render() {\n    const { goods } = this.state;\n    const arrayOfSelect = Array(10).fill('');\n\n    return (\n      <div className=\"goods\">\n        <ul>\n          {goods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={this.reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetGoods}\n        >\n          Sort Alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.resetGoods}\n        >\n          Reset\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByLengthGoods}\n        >\n          Sort by Length\n        </button>\n\n        <select\n          onInput={this.selectedChangeOfGoods}\n          value={this.state.length}\n        >\n          {arrayOfSelect.map((item, index) => (\n            <option\n              value={index + 1}\n            >\n              {' '}\n              {index + 1}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default GoodList;\n","import React from 'react';\nimport GoodList from './Goodlist';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisible: true,\n  };\n\n  hideStartButton = () => {\n    this.setState(\n      { isVisible: false },\n    );\n  }\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {\n          isVisible\n            ? (\n              <button type=\"button\" onClick={this.hideStartButton}>\n                Push to start\n              </button>\n            ) : <GoodList goods={goodsFromServer} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}